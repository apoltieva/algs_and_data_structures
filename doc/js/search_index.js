var search_data = {"index":{"searchIndex":["doublecircularlist","<<()","[]()","delete()","delete_at()","each()","new()","remove_node()","traverse_to_node()"],"longSearchIndex":["doublecircularlist","doublecircularlist#<<()","doublecircularlist#[]()","doublecircularlist#delete()","doublecircularlist#delete_at()","doublecircularlist#each()","doublecircularlist::new()","doublecircularlist#remove_node()","doublecircularlist#traverse_to_node()"],"info":[["DoubleCircularList","","DoubleCircularList.html","","<p>Ruby realization of a double circular linked list which contains objects of class <code>@Node</code>.\n"],["<<","DoubleCircularList","DoubleCircularList.html#method-i-3C-3C","(value)","<p>Creates a new node with the given value at the end of the list.\n<p>Attributes\n<p><code>value</code> - an object that will …\n"],["[]","DoubleCircularList","DoubleCircularList.html#method-i-5B-5D","(index_or_range)","<p>If integer is given, returns a <strong>node</strong> with the index equal to the int. If range is given, returns an Array …\n"],["delete","DoubleCircularList","DoubleCircularList.html#method-i-delete","(value)","<p>Deletes the first node that has the value of <code>value</code>. If block is given, returns its value, else <code>nil</code>.\n<p>Attributes …\n"],["delete_at","DoubleCircularList","DoubleCircularList.html#method-i-delete_at","(index)","<p>Same as Array#delete_at\n"],["each","DoubleCircularList","DoubleCircularList.html#method-i-each","()","<p>Same as Array#each\n"],["new","DoubleCircularList","DoubleCircularList.html#method-c-new","(input_ary = nil)","<p>Creates a new list.\n<p>Options\n<p><code>:input_ary</code> - any iterable with #each that is used to populate the list with …\n"],["remove_node","DoubleCircularList","DoubleCircularList.html#method-i-remove_node","(node)","<p>Removes the node from the list.\n<p>Attributes\n<p><code>node</code> - the node to remove\n"],["traverse_to_node","DoubleCircularList","DoubleCircularList.html#method-i-traverse_to_node","(index, current, as_many_as_said: false)","<p>Goes through the list from <code>current</code> node to the DoubleCircularList [<code>index</code>] node, executing block if given. …\n"]]}}